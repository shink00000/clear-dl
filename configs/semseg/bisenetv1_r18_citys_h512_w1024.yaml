__variables:
  - &size [512, 1024]
  - &mean [0.485, 0.456, 0.406]
  - &std [0.229, 0.224, 0.225]
  - &data_dir ./data/cityscapes_ss/
  - &n_classes 19

__particular_variables:
  - &feat_levels [4, 5]

framework:
  type: SemSeg
  input_size: *size

data_pipeline:
  dataset:
    type: SemSegDataset
    data_dir: *data_dir
    transforms:
      train:
        - { type: Resize, scale_range: [0.5, 2.0] }
        - { type: RandomCrop, size: *size }
        - { type: RandomHorizontalFlip }
        - { type: PhotoMetricDistortion }
        - { type: Normalize, mean: *mean, std: *std }
      val:
        - { type: Normalize, mean: *mean, std: *std }
      test:
        - { type: Normalize, mean: *mean, std: *std }
  dataloader:
    batch_size:
      train: 16
      val: 4
      test: 4
    num_workers: 2

model:
  type: BiSeNetV1
  spacial_path:
    out_channels: [64, 64, 64, 128]
  context_path:
    backbone:
      type: ResNet
      depth: 18
      weights: default
    feat_levels: *feat_levels
    out_channels: &context_out_channels 128
  ffm:
    in_channels: 256
    out_channels: &ffm_out_channels 256
  head:
    in_channels: *ffm_out_channels
    mid_channels: 256
    n_classes: *n_classes
  aux_head:
    in_channels: [*context_out_channels, *context_out_channels]
    mid_channels: [64, 64]
    n_classes: *n_classes
  criterion:
    cls_loss:
      { type: SoftmaxFocalLoss, gamma: 2, reduction: mean, ignore_index: 255 }
    aux_loss:
      { type: SoftmaxFocalLoss, gamma: 2, reduction: mean, ignore_index: 255 }

optimizer:
  type: SGD
  lr: 0.025
  momentum: 0.9
  weight_decay: 0.0005
  multipliers:
    "backbone": { lr: 0.1 }

scheduler:
  type: PolynomialLR
  gamma: 0.9
  max_iterations: 40000

metrics:
  - type: MeanIoU
    n_classes: *n_classes
    labelmap_path: ./data/cityscapes_ss/labelmap.json
    ignore_index: 255
